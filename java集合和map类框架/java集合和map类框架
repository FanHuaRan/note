java集合和map类框架

类层次图
注意：结构并不完善，差点东西，含有一个错误，LinkedHashSet应该是继承HashSet

总结
1.集合类的顶级接口是Collection,映射类的顶级接口是Map,队列类的顶级接口是Queue,栈无接口，还有一个字典类接口Dictionary(只有HashTable一个实现，HahTable同时实现Map接口)
2.Collecion接口包括List和Set,List准许重复元素，Set不准许重复元素
3.Set的HashSet、LinkedHashSet、TreeSet分别依靠HashMap、LinkedHashMap、TreeMap作为其内部存储结构
  这些Set都是内部含有一个Map对象和一个Object字段，key存储Set中要存放的值，value存放那个Object字段
  TreeSet实现了SortedSet(SortedSet继承自Set)
  EnumSet只能存放枚举类型元素，直接依靠一个枚举类型的数组，并不依靠EnumMap,故其真实具备随机访问能力
4.Map的HashTable、HashMap、LinkedHashMap、IdentityHashMap、WeakHashMap都是依靠链表法解决hash冲突进行存储的
  TreeMap实现了SortedMap(SortedMap继承自Map),基于红黑树进行存储(排序)
  EnumMap的key必须是枚举类型，其value元素全部存放在一个object[]数组当中，通过枚举类型.ordinal()方法计算value元素的存放位置，速度也是很快的，
  IdentityHashMap和HashMap基本差不多，不过HashMap是使用equals方法比较相等性，IdentityHashMap使用==比较引用相等性
5.栈没有接口，只有一个Stack的泛型类，如下：
  Stack<E> extends Vector<E>
6.Queue包括LinkedList、PriorityQueue两个实现，前者是FIFO，后者是每个元素带优先级，有两个规则，优先级低的优
  先出，先进队的先出，实际上PriorityQueu依靠二叉小顶堆实现
  Deque接口继承自Queue接口，双向队列
7.凡是Linked开头的容器都是依靠链表实现的，具备快速的插入和删除速度（随机存放），但不具备快速的随机访问能力
  ，因此适合存远多于取的情况
  基于数组实现的容器具备快速的随机访问能力，但不具备快速的插入和删除速度（随机存放），因此适合取远多于存的情况
8.依靠数组实现的容器基本都支持随机访问能力，因此都是实现了RandomAccess接口（一个虚接口），但是EnumSet和Enum
  Map并没有实现该接口，
9.上面图片和列举的并没有把所有容器列举完，上面的很多容器都不是线程安全的，因此尚未包括线程安全的版本和支
  持阻塞的队列等等实现，因此又存在两个其它分类：
  (1)Collecions.synchronizedMap、synchronizedList、synchronizedCollection、synchronizedSet等方法依靠装饰器模式实现了Map、Collecion、List、Set的同步版本，其实现原理是内部含有一个非线程安全的容器和一个对象（名字叫mutex),如果构造方法不传入mutex，就把非线程安全容器本身作为mutex,每个被装饰的接口方法都是通过如下方式实现的：
  接口方法{
	  synchronized (mutex) {
				非线程安全的容器.接口方法
	  }
  }
  (2)第一种方式实现的线程安全容器因为是通过一个mutex+synchronized实现的，因此可能某些情况性能不够高，因此java并发包针对部分容器，使用java并发包的并发器实现相关的并发线程安全版本，如ConcurrentLinkedDeque、ConcurrentHashMap等
分类总结
1.Vector:实现了List接口，依靠数组，线程安全，全是synchronized签名方法
2.ArrayList：实现了List接口，依靠数组，非线程安全
3.LinkedList：实现了List和Deque接口，依靠链表，非线程安全
4.Stack:继承自Vector，含有栈的特性，非线程安全
5.PriorityQueue：实现了Queue，依靠二叉小顶堆，每个元素带优先级，有两个规则，优先级低的优
                 先出，先进队的先出，非线程安全 more:http://user.qzone.qq.com/834171100/blog/1505913230
6.HashTable：实现了Dictionary和Map接口，链表法存储，不准许空的值或者key,线程安全,全是synchronized签名方法,m
             ore:http://user.qzone.qq.com/834171100/blog/1502160176
7.HashMap：实现了Map接口，链表法存储，非线程安全,more:http://user.qzone.qq.com/834171100/blog/1502160176
8.LinkedHashMap：实现了Map接口，继承自HashMap，在HashMap的基础上维护了一个node的双向链表来保证入队顺序，非
                 线程安全
9.IdentityHashMap：实现了Map接口，IdentityHashMap和HashMap基本差不多，不过HashMap是使用equals方法比较相等性
                   ，IdentityHashMap使用==比较引用相等性，非线程安全
10.WeakHashMap：实现了Map接口，链表法存储，不过是弱引用，map内部的引用不能阻止垃圾回收，非线程安全
11.TreeMap：实现了Map接口，基于红黑树进行存储，非线程安全,more:http://user.qzone.qq.com/834171100/
            blog/1505913757
12.EnumMap：实现了Map接口，key必须是枚举类型，其value元素全部存放在一个object数组当中，通过枚举类型.ordinal
            ()方法计算value元素的存放位置，速度很快，无hash冲突，非线程安全
13.HashSet：实现了Set接口，依靠HashMap存储，非线程安全
14.LinkedHashSet：实现了Set接口，依靠LinkedHashMap存储，保证元素顺序，非线程安全
14.TreeSet：实现了Set接口，依靠TreeMap存储，非线程安全,more:http://user.qzone.qq.com/834171100/
            blog/1505913457
15.EnumSet：实现了Set接口，存放枚举类型元素，依靠枚举类型数组存储，具备随机访问能力，非线程安全，more:http:
            //www.cnblogs.com/chenpi/archive/2016/03/19/5296330.html
